import{d as k,r as f,o as a,c as i,b as r,t as h,n as b,g as T,q as $,u as _,e as g,f as N,T as R,F as j,s as u,y as C}from"./index-3400651a.js";const B={class:"ts-app-drawer is-right is-small is-visible"},E={class:"content"},O={class:"ts-content"},U={class:"ts-header is-large"},L={class:"ts-input is-underlined has-top-spaced"},V=["placeholder"],q={class:"ts-wrap is-end-aligned has-top-spaced-big"},x=k({__name:"TheConfirm",props:{title:{},message:{},accent:{default:"positive"},check:{},confirm:{},cancel:{}},setup(l){const n=f("");return(t,e)=>(a(),i("div",B,[r("div",E,[r("div",O,[r("div",U,h(t.title),1),r("div",{class:b(["ts-text is-secondary has-top-spaced",{"is-negative":t.accent=="negative"}])},h(t.message),3),r("div",L,[T(r("input",{type:"text",placeholder:t.check,"onUpdate:modelValue":e[0]||(e[0]=s=>n.value=s)},null,8,V),[[$,n.value]])]),r("div",q,[r("button",{class:"ts-button is-outlined",onClick:e[1]||(e[1]=(...s)=>t.cancel&&t.cancel(...s))},"Cancel"),r("button",{class:b(["ts-button",{"is-disabled":t.check!==n.value}]),onClick:e[2]||(e[2]=(...s)=>t.confirm&&t.confirm(...s))},"Ok",2)])])])]))}}),F=k({__name:"TheTaskRemover",props:{taskName:{},wrapper:{}},setup(l){const n=_(),t=l,e=f(""),s=f(""),c=o=>{const p=o.shift();C.emit("remove_task",p,(d,y,w)=>{d||alert(`${y}: remove task ${p} failed: ${w}`),o.length>0?c(o):(u.loading=!1,e.value=""),n.push({name:"tasks"})})},v=()=>{u.loading=!0,c(t.taskName.split(","))},m=()=>{const o=t.taskName.split(",");o.length==1?(e.value=o[0],s.value=`You are about to remove task \`${o[0]}\``):(e.value=`remove ${o.length} tasks`,s.value=`You are about to remove ${o.length} tasks: \`${o.join(", ")}\``)};return(o,p)=>(a(),i(j,null,[o.wrapper=="button"?(a(),i("button",{key:0,class:"ts-button is-outlined is-negative",onClick:m},"Remove")):(a(),i("button",{key:1,class:"item",onClick:m},"Remove")),(a(),g(R,{to:"#app"},[e.value!==""?(a(),g(x,{key:0,title:"Confirm removal",accent:"negative",message:s.value,check:e.value,confirm:()=>v(),cancel:()=>e.value=""},null,8,["message","check","confirm","cancel"])):N("",!0)]))],64))}}),S=k({__name:"TheTaskExporter",props:{taskName:{},wrapper:{}},setup(l){const n=l,t=s=>{const c=s.shift();C.emit("export_task",c,(v,m,o)=>{if(!v){alert(`${m}: ${o}`),u.loading=!1;return}const p=new Blob([JSON.stringify(o)],{type:"application/json"}),d=window.URL.createObjectURL(p);Object.assign(document.createElement("a"),{href:d,download:`${c}.rlstask`}).click(),window.URL.revokeObjectURL(d),s.length>0?t(s):u.loading=!1})},e=()=>{u.loading=!0,t(n.taskName.split(","))};return(s,c)=>s.wrapper=="button"?(a(),i("button",{key:0,class:"ts-button is-outlined",onClick:e},"Export")):(a(),i("button",{key:1,class:"item",onClick:e},"Export"))}}),Y=k({__name:"TheTaskCopier",props:{taskName:{},wrapper:{}},setup(l){const n=l,t=_(),e=()=>{t.push({name:"task-create",query:{copy:n.taskName}})};return(s,c)=>s.wrapper=="button"?(a(),i("button",{key:0,class:"ts-button is-outlined",onClick:e},"Copy")):(a(),i("button",{key:1,class:"item",onClick:e},"Copy"))}});export{F as _,S as a,Y as b};
