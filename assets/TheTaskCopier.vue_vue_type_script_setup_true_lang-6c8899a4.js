import{d as p,r as k,o as i,c as r,e as a,t as d,n as m,l as _,v as h,p as b,h as f,F as g,s as l,m as v,u as y}from"./index-e603295e.js";const C={class:"ts-app-drawer is-right is-small is-visible"},$={class:"content"},w={class:"ts-content"},N={class:"ts-header is-large"},T={class:"ts-input is-underlined has-top-spaced"},R=["placeholder"],B={class:"ts-wrap is-end-aligned has-top-spaced-big"},E=p({__name:"TheConfirm",props:{title:{},message:{},accent:{default:"positive"},check:{},confirm:{},cancel:{}},setup(c){const o=k("");return(e,t)=>(i(),r("div",C,[a("div",$,[a("div",w,[a("div",N,d(e.title),1),a("div",{class:m(["ts-text is-secondary has-top-spaced",{"is-negative":e.accent=="negative"}])},d(e.message),3),a("div",T,[_(a("input",{type:"text",placeholder:e.check,"onUpdate:modelValue":t[0]||(t[0]=s=>o.value=s)},null,8,R),[[h,o.value]])]),a("div",B,[a("button",{class:"ts-button is-outlined",onClick:t[1]||(t[1]=(...s)=>e.cancel&&e.cancel(...s))},"Cancel"),a("button",{class:m(["ts-button",{"is-disabled":e.check!==o.value}]),onClick:t[2]||(t[2]=(...s)=>e.confirm&&e.confirm(...s))},"Ok",2)])])])]))}}),O={key:0},U={key:1},F=p({__name:"TheTaskRemover",props:{taskName:{},wrapper:{}},setup(c){const o=c,e=k(""),t=()=>{l.loading=!0,v.emit("remove_task",o.taskName,(s,n,u)=>{s||alert(`${n}: remove task ${o.taskName} failed: ${u}`),e.value="",l.loading=!1})};return(s,n)=>(i(),r(g,null,[s.wrapper=="button"?(i(),r("div",O,[a("button",{class:"ts-button is-outlined is-negative",onClick:n[0]||(n[0]=u=>e.value=s.taskName)},"Remove")])):(i(),r("div",U,[a("a",{class:"ts-text is-link has-cursor-pointer",onClick:n[1]||(n[1]=u=>e.value=s.taskName)},"Remove")])),e.value!==""?(i(),b(E,{key:2,title:"Confirm removal",accent:"negative",message:`You are about to remove task \`${e.value}\``,check:e.value,confirm:()=>t(),cancel:()=>e.value=""},null,8,["message","check","confirm","cancel"])):f("",!0)],64))}}),j={key:0},L={key:1},S=p({__name:"TheTaskExporter",props:{taskName:{},wrapper:{}},setup(c){const o=c,e=()=>{l.loading=!0,v.emit("export_task",o.taskName,t=>{l.loading=!1;const s=new Blob([JSON.stringify(t)],{type:"application/json"}),n=window.URL.createObjectURL(s);Object.assign(document.createElement("a"),{href:n,download:`${o.taskName}.rlstask`}).click(),window.URL.revokeObjectURL(n),l.loading=!1})};return(t,s)=>t.wrapper=="button"?(i(),r("div",j,[a("button",{class:"ts-button is-outlined",onClick:e},"Export")])):(i(),r("div",L,[a("a",{class:"ts-text is-link has-cursor-pointer",onClick:e},"Export")]))}}),V={key:0},x={key:1},q=p({__name:"TheTaskCopier",props:{taskName:{},wrapper:{}},setup(c){const o=c,e=y(),t=()=>{e.push({name:"task-create",query:{copy:o.taskName}})};return(s,n)=>s.wrapper=="button"?(i(),r("div",V,[a("button",{class:"ts-button is-outlined",onClick:t},"Copy")])):(i(),r("div",x,[a("a",{class:"ts-text is-link has-cursor-pointer",onClick:t},"Copy")]))}});export{F as _,S as a,q as b};
