import{d,r as k,o as n,c,b as i,t as v,n as f,g as y,q as w,e as h,f as T,T as $,F as N,s as m,x as b,u as R}from"./index-420f131f.js";const j={class:"ts-app-drawer is-right is-small is-visible"},B={class:"content"},E={class:"ts-content"},O={class:"ts-header is-large"},U={class:"ts-input is-underlined has-top-spaced"},L=["placeholder"],x={class:"ts-wrap is-end-aligned has-top-spaced-big"},V=d({__name:"TheConfirm",props:{title:{},message:{},accent:{default:"positive"},check:{},confirm:{},cancel:{}},setup(r){const a=k("");return(e,t)=>(n(),c("div",j,[i("div",B,[i("div",E,[i("div",O,v(e.title),1),i("div",{class:f(["ts-text is-secondary has-top-spaced",{"is-negative":e.accent=="negative"}])},v(e.message),3),i("div",U,[y(i("input",{type:"text",placeholder:e.check,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s)},null,8,L),[[w,a.value]])]),i("div",x,[i("button",{class:"ts-button is-outlined",onClick:t[1]||(t[1]=(...s)=>e.cancel&&e.cancel(...s))},"Cancel"),i("button",{class:f(["ts-button",{"is-disabled":e.check!==a.value}]),onClick:t[2]||(t[2]=(...s)=>e.confirm&&e.confirm(...s))},"Ok",2)])])])]))}}),D=d({__name:"TheTaskRemover",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=k(""),t=k(""),s=o=>{const p=o.shift();b.emit("remove_task",p,(g,_,C)=>{g||alert(`${_}: remove task ${p} failed: ${C}`),o.length>0?s(o):(m.loading=!1,e.value="")})},l=()=>{m.loading=!0,s(a.taskName.split(","))},u=()=>{const o=a.taskName.split(",");o.length==1?(e.value=o[0],t.value=`You are about to remove task \`${o[0]}\``):(e.value=`remove ${o.length} tasks`,t.value=`You are about to remove ${o.length} tasks: \`${o.join(", ")}\``)};return(o,p)=>(n(),c(N,null,[o.wrapper=="button"?(n(),c("button",{key:0,class:"ts-button is-outlined is-negative",onClick:u},"Remove")):(n(),c("button",{key:1,class:"item",onClick:u},"Remove")),(n(),h($,{to:"#app"},[e.value!==""?(n(),h(V,{key:0,title:"Confirm removal",accent:"negative",message:t.value,check:e.value,confirm:()=>l(),cancel:()=>e.value=""},null,8,["message","check","confirm","cancel"])):T("",!0)]))],64))}}),F=d({__name:"TheTaskExporter",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=s=>{const l=s.shift();b.emit("export_task",l,u=>{const o=new Blob([JSON.stringify(u)],{type:"application/json"}),p=window.URL.createObjectURL(o);Object.assign(document.createElement("a"),{href:p,download:`${l}.rlstask`}).click(),window.URL.revokeObjectURL(p),s.length>0?e(s):m.loading=!1})},t=()=>{m.loading=!0,e(a.taskName.split(","))};return(s,l)=>s.wrapper=="button"?(n(),c("button",{key:0,class:"ts-button is-outlined",onClick:t},"Export")):(n(),c("button",{key:1,class:"item",onClick:t},"Export"))}}),S=d({__name:"TheTaskCopier",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=R(),t=()=>{e.push({name:"task-create",query:{copy:a.taskName}})};return(s,l)=>s.wrapper=="button"?(n(),c("button",{key:0,class:"ts-button is-outlined",onClick:t},"Copy")):(n(),c("button",{key:1,class:"item",onClick:t},"Copy"))}});export{D as _,F as a,S as b};
