import{d,r as k,o as i,c,b as n,t as v,n as f,g as C,q as y,e as w,f as T,F as $,s as m,x as h,u as N}from"./index-63d655d1.js";const R={class:"ts-app-drawer is-right is-small is-visible"},j={class:"content"},B={class:"ts-content"},E={class:"ts-header is-large"},O={class:"ts-input is-underlined has-top-spaced"},U=["placeholder"],L={class:"ts-wrap is-end-aligned has-top-spaced-big"},x=d({__name:"TheConfirm",props:{title:{},message:{},accent:{default:"positive"},check:{},confirm:{},cancel:{}},setup(r){const a=k("");return(e,t)=>(i(),c("div",R,[n("div",j,[n("div",B,[n("div",E,v(e.title),1),n("div",{class:f(["ts-text is-secondary has-top-spaced",{"is-negative":e.accent=="negative"}])},v(e.message),3),n("div",O,[C(n("input",{type:"text",placeholder:e.check,"onUpdate:modelValue":t[0]||(t[0]=s=>a.value=s)},null,8,U),[[y,a.value]])]),n("div",L,[n("button",{class:"ts-button is-outlined",onClick:t[1]||(t[1]=(...s)=>e.cancel&&e.cancel(...s))},"Cancel"),n("button",{class:f(["ts-button",{"is-disabled":e.check!==a.value}]),onClick:t[2]||(t[2]=(...s)=>e.confirm&&e.confirm(...s))},"Ok",2)])])])]))}}),q=d({__name:"TheTaskRemover",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=k(""),t=k(""),s=o=>{const p=o.shift();h.emit("remove_task",p,(b,g,_)=>{b||alert(`${g}: remove task ${p} failed: ${_}`),o.length>0?s(o):(m.loading=!1,e.value="")})},l=()=>{m.loading=!0,s(a.taskName.split(","))},u=()=>{const o=a.taskName.split(",");o.length==1?(e.value=o[0],t.value=`You are about to remove task \`${o[0]}\``):(e.value=`remove ${o.length} tasks`,t.value=`You are about to remove ${o.length} tasks: \`${o.join(", ")}\``)};return(o,p)=>(i(),c($,null,[o.wrapper=="button"?(i(),c("button",{key:0,class:"ts-button is-outlined is-negative",onClick:u},"Remove")):(i(),c("button",{key:1,class:"item",onClick:u},"Remove")),e.value!==""?(i(),w(x,{key:2,title:"Confirm removal",accent:"negative",message:t.value,check:e.value,confirm:()=>l(),cancel:()=>e.value=""},null,8,["message","check","confirm","cancel"])):T("",!0)],64))}}),D=d({__name:"TheTaskExporter",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=s=>{const l=s.shift();h.emit("export_task",l,u=>{const o=new Blob([JSON.stringify(u)],{type:"application/json"}),p=window.URL.createObjectURL(o);Object.assign(document.createElement("a"),{href:p,download:`${l}.rlstask`}).click(),window.URL.revokeObjectURL(p),s.length>0?e(s):m.loading=!1})},t=()=>{m.loading=!0,e(a.taskName.split(","))};return(s,l)=>s.wrapper=="button"?(i(),c("button",{key:0,class:"ts-button is-outlined",onClick:t},"Export")):(i(),c("button",{key:1,class:"item",onClick:t},"Export"))}}),F=d({__name:"TheTaskCopier",props:{taskName:{},wrapper:{}},setup(r){const a=r,e=N(),t=()=>{e.push({name:"task-create",query:{copy:a.taskName}})};return(s,l)=>s.wrapper=="button"?(i(),c("button",{key:0,class:"ts-button is-outlined",onClick:t},"Copy")):(i(),c("button",{key:1,class:"item",onClick:t},"Copy"))}});export{q as _,D as a,F as b};
